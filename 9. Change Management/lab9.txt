1.

We first get the Diffutils repository using the command:

 git clone https://git.savannah.gnu.org/git/diffutils.git

2.

I then get the log of changes using the git log command.

git log > git-log.txt

3.

To get a list of tags used:

git tag > git-tags.txt

4.

I then go into the git-log.txt file and use C-s to
find the commit and get the commit number:

62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f

I then use the id to create this patch:

git show 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f > quote-patch.txt

5.

I then use checkout version 3.0 in the repository:
git checkout v3.0

6.
We now need to apply the patch

patch -p1 < quote-patch.txt

I got no file exists for:

HACKING
doc/diffutils.texi
/man/help2man

I have problems when

patching file README

Hunk #1 FAILED at 9.
Hunk #3 FAILED at 60.

patching file README-hacking
Hunk #1 FAILED at 19.

patching file cfg.mk

Hunk #1 FAILED at 29.

patching file diff.c
Hunk #10 FAILED at 876.
Hunk #11 FAILED at 906.
Hunk #12 FAILED at 942.

patching file diff3.c
Hunk #6 FAILED at 433.

7.
I now check what I did using
git status


And I get this:

HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   NEWS
        modified:   README
        modified:   TODO
        modified:   doc/diagmeet.note
        modified:   ms/config.bat
        modified:   ms/config.site
        modified:   po/en.po
        modified:   src/analyze.c
        modified:   src/cmp.c
        modified:   src/context.c
        modified:   src/diff.c
        modified:   src/diff.h
        modified:   src/diff3.c
        modified:   src/dir.c
        modified:   src/ifdef.c
        modified:   src/io.c
        modified:   src/sdiff.c
        modified:   src/side.c
        modified:   src/system.h
        modified:   src/util.c
        modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        NEWS.orig
        README-hacking.orig
        README-hacking.rej
        README.orig
        README.rej
        cfg.mk.orig
        cfg.mk.rej
        git-log.txt
        git-tags.txt
        ms/config.site.orig
        quote-patch.txt
        src/cmp.c.orig
        src/context.c.orig
        src/diff.c.orig
        src/diff.c.rej
        src/diff.h.orig
        src/diff3.c.orig
        src/diff3.c.rej
        src/dir.c.orig
        src/sdiff.c.orig
        src/system.h.orig
        src/util.c.orig
        tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")

8.

After reading up on the links, I am now able to figure out
how to use the commands:
vc-diff, vc-revert, and
diff-apply-hunk

9.

I first use emacs to open all
these non .c files:
NEWS, README, TODO, doc/diagmeet.note, ms/config.bat,
ms/config.site, po/en.po, src/diff.h, src/system.h, tests/help-version

I go through all the files that are not
the c source code and enter the command 
C-x v =

I then want all my changes to be reverted so
I use the command:
C-x v u

For the .c files I have to revert the changes
only to the comments. 
I cd into the src directory. 

I first use C-x v = to check for changes.

Then I used M-g g to go to the line number needed.

Then I use M-% to replace the first ' with `

10.

I first look at src/*.c.rej and have to manually
apply these patches.


I then try to manually apply the changes for the
rejected patches.

Inside we see that the patches were rejected
because the line numbers and strings weren't the same.
Because of this it could not merge the files.

So we need to manually change these our selves 

11.

To remove all untracked files, we will use the command:
git clean -f
which allows us to remove all the untracked files.

12.

I then use the command:

git status

and get this output:

HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   src/cmp.c
        modified:   src/diff.c
        modified:   src/diff3.c
        modified:   src/dir.c
        modified:   src/sdiff.c
        modified:   src/util.c

no changes added to commit (use "git add" and/or "git commit -a")

I then use the command:

git diff > quote-3.0-patch.txt

I then use the command:

wc -l quote-3.0-patch.txt and get a number around 300

Output: 
344 quote-3.0-patch.txt


13.

I first run this:

./bootstrap

I then am now able to run configure

./configure

However I run make and get this error:

./stdio.h:434:1: error: 'gets' undeclared here

I have to switch to the 02 server to make this work.

So now I run
make
make check

Now I use
diff . -
and get the output
./diff: cannot compare '-' to a directory

I then run this command after I use cd src

./diff --help and all of them get the right
quotation marks.

14.

I then make 2 directories

mkdir diffutils-3.0
mkdir diffutils-3.0-patch

git clone ~eggert/src/gnu/diffutils diffutils-3.0-orig

I then cd into diffutils-3.0-orig directory.

and use the checkout command:

git checkout 'v3.0' -b 'o3.0'

I then copy the original source codes to diffutils-3.0

cp ./src/*.c ../diffutils-3.0/

I then cd back to my ~ directory.

I then copy the patched source codes to diffutils-3.0-patch

cp ./diffutils/src/*.c ./diffutils-3.0-patch/

I now use the new patched diff executable to compare the code:

./diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt

15.

I then compare the 2 patches using the command:

diff quote-3.0-test.txt diffutils/quote-3.0-patch.txt

There are a lot of differences but they are all just
changes in quotation marks and path names to files
being different. 


Thus all the differences are innocuous. 
